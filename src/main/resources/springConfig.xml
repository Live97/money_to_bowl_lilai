<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <!--    开启spring注解扫描，除了controller之外，controller交给springMVC-->
    <context:component-scan base-package="com.amg">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>


    <!-- 引入外部数据库驱动相关配置-->
    <bean id="propertyPlaceholder" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbcConfig.properties"></property>
    </bean>
    <!--    配置数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" >
        <property name="driverClass" value="${driver}"></property>
        <property name="jdbcUrl" value="${url}"></property>
        <property name="user" value="${username}"></property>
        <property name="password" value="${password}"></property>
    </bean>

    <!--    配置Mybatis工厂对象-->
    <bean id="factory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 映射数据源-->
        <property name="dataSource" ref="dataSource"></property>
<!--        映射mybatis核心配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
<!--        映射mapper文件-->
        <property name="mapperLocations" value="classpath:mapper/*Dao.xml"></property>
        <property name="typeAliasesPackage" value="com.amg.mall.domain"></property>
    </bean>
    <!-- 配置SqlSession -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="factory"></constructor-arg>
    </bean>

<!--    配置Mapper映射接口所在包-->
    <bean id="Mappers" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.amg.mall.dao"></property>
    </bean>




<!--    spring声明式事务-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    
    <tx:annotation-driven></tx:annotation-driven>

<!--    配置事务通知对象-->
    <tx:advice id="txAdvice" >
        <tx:attributes>
<!--            所有find（查询）开头的方法，只读-->
            <tx:method name="find*" read-only="true"/>
            <tx:method name="*" rollback-for="java.lang.Throwable" read-only="false"></tx:method>
            <tx:method name="saveOrder"  rollback-for="java.lang.Exception" read-only="false" propagation="REQUIRED"></tx:method>
        </tx:attributes>
    </tx:advice>
    <aop:config>
<!--        所有service里面的方法都配置了事务管理-->
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.amg.mall.service.impl.*ServiceImpl.*(..))"></aop:advisor>
    </aop:config>
</beans>